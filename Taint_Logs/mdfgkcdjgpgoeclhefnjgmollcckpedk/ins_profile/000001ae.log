** Propagation paths: 

0x3f9fa9603849 <String[86]: c"[Tracing] Starting 'resource.link' span on transaction '/xqgtiti/' (a111aae4cb686f50).">:
  0x2057a6ff8cb1 <String[9]: e"/xqgtiti/">, in function 37654791745417 `startChild`: 678723, 679091

0x2057a6ff8cb1 <String[9]: e"/xqgtiti/">:


** Taint source objects:


** Propagation path functions: 

0x05ad4d0c6d11 <JSFunction Kr (sfi = 0xd8eb0079d49)> `Kr`: 613129
(e,t){return qr.call(e)===`[object ${t}]`}
0x223f307c6f89 <JSFunction startChild (sfi = 0x8008888e099)> `startChild`: 678723
(e){const t=new Is({...e,parentSpanId:this.spanId,sampled:this.sampled,traceId:this.traceId});if(t.spanRecorder=this.spanRecorder,t.spanRecorder&&t.spanRecorder.add(t),t.transaction=this.transaction,("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&t.transaction){const n=`[Tracing] Starting '${e&&e.op||"< unknown op >"}' span on transaction '${t.transaction.name||"< unknown name >"}' (${t.transaction.spanId}).`;t.transaction.metadata.spanMetadata[t.spanId]={logMessage:n},Pi.log(n)}return t}
0x17e1c3f34e49 <JSFunction hi (sfi = 0xd8eb007a1a9)> `hi`: 614853
(e,t,n=!1){return!!ti(e)&&(Kr(t,"RegExp")?t.test(e):!!ti(t)&&(n?e===t:e.includes(t)))}
0x3d13bf236ae9 <JSFunction (sfi = 0x13b50ca6b701)> ``: 614979
t=>hi(e,t,n)
0x17e1c3f35a71 <JSFunction Wa (sfi = 0xd8eb007c721)> `Wa`: 645192
(e,t){const[n,r]=e;let i=JSON.stringify(n);function a(e){"string"==typeof i?i="string"==typeof e?i+e:[Qa(i,t),e]:i.push("string"==typeof e?Qa(e,t):e)}for(const e of r){const[t,n]=e;if(a(`\n${JSON.stringify(t)}\n`),"string"==typeof n||n instanceof Uint8Array)a(n);else{let e;try{e=JSON.stringify(n)}catch(t){e=JSON.stringify(Ba(n))}a(e)}}return"string"==typeof i?i:function(e){const t=e.reduce(((e,t)=>e+t.length),0),n=new Uint8Array(t);let r=0;for(const t of e)n.set(t,r),r+=t.length;return n}(i)}
0x223f307c7df1 <JSFunction get name (sfi = 0x8008888e6b9)> `get name`: 682156
(){return this._name}
0x17e1c3f34b89 <JSFunction ti (sfi = 0xd8eb0079e39)> `ti`: 613262
(e){return Kr(e,"String")}
0x3d13bf236641 <JSFunction (sfi = 0x13b50ca68439)> ``: 633340
(e,t){if("transaction"!==e.type||!t||!t.length)return!1;const n=e.transaction;return!!n&&mi(n,t)}
0x223f307c7001 <JSFunction routingInstrumentation (sfi = 0x8008888f2b1)> `routingInstrumentation`: 704500
(e,t=!0,n=!0){if(!Us||!Us.location)return void(("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&Pi.warn("Could not initialize routing instrumentation due to invalid location"));let r,i=Us.location.href;t&&(r=e({name:Us.location.pathname,startTimestamp:Ri.Z1?Ri.Z1/1e3:void 0,op:"pageload",metadata:{source:"url"}})),n&&Ea("history",(({to:t,from:n})=>{void 0===n&&i&&-1!==i.indexOf(t)?i=void 0:n!==t&&(i=void 0,r&&(("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&Pi.log(`[Tracing] Finishing current transaction with op: ${r.op}`),r.finish()),r=e({name:Us.location.pathname,op:"navigation",metadata:{source:"url"}}))}))}
0x01876a8285a1 <JSFunction finish (sfi = 0x8008888e901)> `finish`: 682557
(e){if(void 0!==this.endTimestamp)return;this.name||(("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&Pi.warn("Transaction has no name, falling back to `<unlabeled transaction>`."),this.name="<unlabeled transaction>"),super.finish(e);const t=this._hub.getClient();if(t&&t.emit&&t.emit("finishTransaction",this),!0!==this.sampled)return("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&Pi.log("[Tracing] Discarding transaction because its trace was not chosen to be sampled."),void(t&&t.recordDroppedEvent("sample_rate","transaction"));const n=this.spanRecorder?this.spanRecorder.spans.filter((e=>e!==this&&e.endTimestamp)):[];this._trimEnd&&n.length>0&&(this.endTimestamp=n.reduce(((e,t)=>e.endTimestamp&&t.endTimestamp?e.endTimestamp>t.endTimestamp?e:t:e)).endTimestamp);const r=this.metadata,i={contexts:{...this._contexts,trace:this.getTraceContext()},spans:n,start_timestamp:this.startTimestamp,tags:this.tags,timestamp:this.endTimestamp,transaction:this.name,type:"transaction",sdkProcessingMetadata:{...r,dynamicSamplingContext:this.getDynamicSamplingContext()},...r.source&&{transaction_info:{source:r.source}}};return Object.keys(this._measurements).length>0&&(("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&Pi.log("[Measurements] Adding measurements to transaction",JSON.stringify(this._measurements,void 0,2)),i.measurements=this._measurements),("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&Pi.log(`[Tracing] Finishing ${this.op} transaction: ${this.name}.`),this._hub.captureEvent(i)}

** Taint source functions: 


