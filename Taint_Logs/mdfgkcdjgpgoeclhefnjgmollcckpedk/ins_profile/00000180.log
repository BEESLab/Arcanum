** Propagation paths: 

0x20146cdde9e1 <String[9]: "instagram">:
>> IPC Object:
{"details":"","tainted":false,"recursive":{"0":{"details":"/ram/analysis/v8logs/0000017d.log","tainted":true,"recursive":{}},"length":{"details":"","tainted":false,"recursive":{}}}}
>> END IPC Object


** Taint source objects:


** Propagation path functions: 

0x20146cdc9dd1 <JSFunction getPossibleListOfBrandNamesGivenURL (sfi = 0x2689e093e5a1)> `getPossibleListOfBrandNamesGivenURL`: 853782
(e){let t=[];const n=e.indexOf("://")+3;let r=e.slice(n);An.info(`SHADE | website brand detection | url without the start: "${r}"`)(),0==r.indexOf("www.")&&(r=r.slice(4)),An.info(`SHADE | website brand detection | removed "www": "${r}"`)();let i=r.substr(0,r.indexOf("."));i=this.cleanTheUrlName(i),An.info(`SHADE | website brand detection | before the dot: "${i}"`)(),t.push(i);const a=r.slice(i.length+1);let o=a.substr(0,a.indexOf("."));return o=this.cleanTheUrlName(o),t.push(o),t=t.filter(Boolean),An.info("SHADE | website brand detection | list of possible names:",t)(),t}
0x20146cdc9e09 <JSFunction cleanTheUrlName (sfi = 0x2689e093e5f1)> `cleanTheUrlName`: 854382
(e){return(e=(e=e.replace("official","")).replace("-et-","&")).replace("-","")}
0x3aecc076c2d1 <JSFunction pi (sfi = 0x1b8b6513a159)> `pi`: 614666
(e,t){if(!Array.isArray(e))return"";const n=[];for(let t=0;t<e.length;t++){const r=e[t];try{n.push(String(r))}catch(e){n.push("[value cannot be serialized]")}}return n.join(t)}
0x3c51e3c57a29 <JSFunction _sendEventToWorker (sfi = 0xde4bea11149)> `_sendEventToWorker`: 766909
(e){return this._worker.postMessage("addEvent",JSON.stringify(e))}
0x3aecc076cdf9 <JSFunction Ya (sfi = 0x1b8b6513c299)> `Ya`: 643159
(e,t,r=1/0,i=1/0,a=function(){const e="function"==typeof WeakSet,t=e?new WeakSet:[];return[function(n){if(e)return!!t.has(n)||(t.add(n),!1);for(let e=0;e<t.length;e++)if(t[e]===n)return!0;return t.push(n),!1},function(n){if(e)t.delete(n);else for(let e=0;e<t.length;e++)if(t[e]===n){t.splice(e,1);break}}]}()){const[o,s]=a;if(null==t||["number","boolean","string"].includes(typeof t)&&!oi(t))return t;const l=function(e,t){try{if("domain"===e&&t&&"object"==typeof t&&t._events)return"[Domain]";if("domainEmitter"===e)return"[DomainEmitter]";if(void 0!==n.g&&t===n.g)return"[Global]";if("undefined"!=typeof window&&t===window)return"[Window]";if("undefined"!=typeof document&&t===document)return"[Document]";if(ri(r=t)&&"nativeEvent"in r&&"preventDefault"in r&&"stopPropagation"in r)return"[SyntheticEvent]";if("number"==typeof t&&t!=t)return"[NaN]";if("function"==typeof t)return`[Function: ${ma(t)}]`;if("symbol"==typeof t)return`[${String(t)}]`;if("bigint"==typeof t)return`[BigInt: ${String(t)}]`;const i=function(e){const t=Object.getPrototypeOf(e);return t?t.constructor.name:"null prototype"}(t);return/^HTML(\w*)Element$/.test(i)?`[HTMLElement: ${i}]`:`[object ${i}]`}catch(e){return`**non-serializable** (${e})`}var r}(e,t);if(!l.startsWith("[object "))return l;if(t.__sentry_skip_normalization__)return t;const c="number"==typeof t.__sentry_override_normalization_depth__?t.__sentry_override_normalization_depth__:r;if(0===c)return l.replace("object ","");if(o(t))return"[Circular ~]";const u=t;if(u&&"function"==typeof u.toJSON)try{return Ya("",u.toJSON(),c-1,i,a)}catch(e){}const d=Array.isArray(t)?[]:{};let f=0;const p=Ii(t);for(const e in p){if(!Object.prototype.hasOwnProperty.call(p,e))continue;if(f>=i){d[e]="[MaxProperties ~]";break}const t=p[e];d[e]=Ya(e,t,c-1,i,a),f++}return s(t),d}

** Taint source functions: 


